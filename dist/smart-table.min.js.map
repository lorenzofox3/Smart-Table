{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","descendingFirst","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","hashCode","string","i","chr","len","hash","charCodeAt","filtered","lastSelected","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","isFunction","functionHash","toString","input","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","rows","index","isSelected","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","stSelectMode","$apply","addClass","removeClass","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stDescendingFirst","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","paginationState","prevPage","currentPage","floor","max","abs","pages","numPages","push","newPage","selectPage","page","config","stPipe","pre","pipePromise","post","angular"],"mappings":"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","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\n    'use strict';\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\n    $templateCache.put('template/smart-table/pagination.html',\n        '<nav ng-if=\"numPages && pages.length >= 2\"><ul class=\"pagination\">' +\n        '<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\"><a ng-click=\"selectPage(page)\">{{page}}</a></li>' +\n        '</ul></nav>');\n}]);\n\n\nng.module('smart-table')\n  .constant('stConfig', {\n    pagination: {\n      template: 'template/smart-table/pagination.html',\n      itemsByPage: 10,\n      displayedPages: 5\n    },\n    search: {\n      delay: 400, // ms\n      inputEvent: 'input'\n    },\n    select: {\n      mode: 'single',\n      selectedClass: 'st-selected'\n    },\n    sort: {\n      ascentClass: 'st-sort-ascent',\n      descentClass: 'st-sort-descent',\n      descendingFirst: false,\n      skipNatural: false,\n      delay:300\n    },\n    pipe: {\n      delay: 100 //ms\n    }\n  });\nng.module('smart-table')\n  .controller('stTableController', ['$scope', '$parse', '$filter', '$attrs', function StTableController ($scope, $parse, $filter, $attrs) {\n    var propertyName = $attrs.stTable;\n    var displayGetter = $parse(propertyName);\n    var displaySetter = displayGetter.assign;\n    var safeGetter;\n    var orderBy = $filter('orderBy');\n    var filter = $filter('filter');\n    var safeCopy = copyRefs(displayGetter($scope));\n    var tableState = {\n      sort: {},\n      search: {},\n      pagination: {\n        start: 0,\n        totalItemCount: 0\n      }\n    };\n    var filtered;\n    var pipeAfterSafeCopy = true;\n    var ctrl = this;\n    var lastSelected;\n\n    function copyRefs (src) {\n      return src ? [].concat(src) : [];\n    }\n\n    function updateSafeCopy () {\n      safeCopy = copyRefs(safeGetter($scope));\n      if (pipeAfterSafeCopy === true) {\n        ctrl.pipe();\n      }\n    }\n\n    function deepDelete (object, path) {\n      if (path.indexOf('.') != -1) {\n        var partials = path.split('.');\n        var key = partials.pop();\n        var parentPath = partials.join('.');\n        var parentObject = $parse(parentPath)(object)\n        delete parentObject[key];\n        if (Object.keys(parentObject).length == 0) {\n          deepDelete(object, parentPath);\n        }\n      } else {\n        delete object[path];\n      }\n    }\n\n    if ($attrs.stSafeSrc) {\n      safeGetter = $parse($attrs.stSafeSrc);\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc && safeSrc.length ? safeSrc[0] : undefined;\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc ? safeSrc.length : 0;\n      }, function (newValue, oldValue) {\n        if (newValue !== safeCopy.length) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        return safeGetter($scope);\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          tableState.pagination.start = 0;\n          updateSafeCopy();\n        }\n      });\n    }\n\n    function hashCode(string) { // modified from http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n      var hash = 0, i, chr, len;\n\n      if (!string || string.length === 0) {\n        return hash;\n      }\n\n      for (i = 0, len = string.length; i < len; i++) {\n        chr   = string.charCodeAt(i);\n        hash  = ((hash << 5) - hash) + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    }\n\n    /**\n     * sort the rows\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\n     * @param [reverse] - if you want to reverse the order\n     */\n    this.sortBy = function sortBy (predicate, reverse) {\n      tableState.sort.predicate = predicate;\n      tableState.sort.reverse = reverse === true;\n\n      if (ng.isFunction(predicate)) { // the $watch on .sort in stSort.js will not fire if only the .sort.predicate function changes\n        tableState.sort.functionHash = hashCode(predicate.toString()); // a non-function property must change\n      } else {\n        delete tableState.sort.functionHash;\n      }\n\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * search matching rows\n     * @param {String} input - the input string\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\n     */\n    this.search = function search (input, predicate) {\n      var predicateObject = tableState.search.predicateObject || {};\n      var prop = predicate ? predicate : '$';\n\n      input = ng.isString(input) ? input.trim() : input;\n      $parse(prop).assign(predicateObject, input);\n      // to avoid to filter out null value\n      if (!input) {\n        deepDelete(predicateObject, prop);\n      }\n      tableState.search.predicateObject = predicateObject;\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\n     */\n    this.pipe = function pipe () {\n      var pagination = tableState.pagination;\n      var output;\n      filtered = tableState.search.predicateObject ? filter(safeCopy, tableState.search.predicateObject) : safeCopy;\n      if (tableState.sort.predicate) {\n        filtered = orderBy(filtered, tableState.sort.predicate, tableState.sort.reverse);\n      }\n      pagination.totalItemCount = filtered.length;\n      if (pagination.number !== undefined) {\n        pagination.numberOfPages = filtered.length > 0 ? Math.ceil(filtered.length / pagination.number) : 1;\n        pagination.start = pagination.start >= filtered.length ? (pagination.numberOfPages - 1) * pagination.number : pagination.start;\n        output = filtered.slice(pagination.start, pagination.start + parseInt(pagination.number));\n      }\n      displaySetter($scope, output || filtered);\n    };\n\n    /**\n     * select a dataRow (it will add the attribute isSelected to the row object)\n     * @param {Object} row - the row to select\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\n     */\n    this.select = function select (row, mode) {\n      var rows = copyRefs(displayGetter($scope));\n      var index = rows.indexOf(row);\n      if (index !== -1) {\n        if (mode === 'single') {\n          row.isSelected = row.isSelected !== true;\n          if (lastSelected) {\n            lastSelected.isSelected = false;\n          }\n          lastSelected = row.isSelected === true ? row : undefined;\n        } else {\n          rows[index].isSelected = !rows[index].isSelected;\n        }\n      }\n    };\n\n    /**\n     * take a slice of the current sorted/filtered collection (pagination)\n     *\n     * @param {Number} start - start index of the slice\n     * @param {Number} number - the number of item in the slice\n     */\n    this.slice = function splice (start, number) {\n      tableState.pagination.start = start;\n      tableState.pagination.number = number;\n      return this.pipe();\n    };\n\n    /**\n     * return the current state of the table\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\n     */\n    this.tableState = function getTableState () {\n      return tableState;\n    };\n\n    this.getFilteredCollection = function getFilteredCollection () {\n      return filtered || safeCopy;\n    };\n\n    /**\n     * Use a different filter function than the angular FilterFilter\n     * @param filterName the name under which the custom filter is registered\n     */\n    this.setFilterFunction = function setFilterFunction (filterName) {\n      filter = $filter(filterName);\n    };\n\n    /**\n     * Use a different function than the angular orderBy\n     * @param sortFunctionName the name under which the custom order function is registered\n     */\n    this.setSortFunction = function setSortFunction (sortFunctionName) {\n      orderBy = $filter(sortFunctionName);\n    };\n\n    /**\n     * Usually when the safe copy is updated the pipe function is called.\n     * Calling this method will prevent it, which is something required when using a custom pipe function\n     */\n    this.preventPipeOnWatch = function preventPipe () {\n      pipeAfterSafeCopy = false;\n    };\n  }])\n  .directive('stTable', function () {\n    return {\n      restrict: 'A',\n      controller: 'stTableController',\n      link: function (scope, element, attr, ctrl) {\n\n        if (attr.stSetFilter) {\n          ctrl.setFilterFunction(attr.stSetFilter);\n        }\n\n        if (attr.stSetSort) {\n          ctrl.setSortFunction(attr.stSetSort);\n        }\n      }\n    };\n  });\n\nng.module('smart-table')\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\n    return {\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n        var tableCtrl = ctrl;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.search.delay;\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\n\n        attr.$observe('stSearch', function (newValue, oldValue) {\n          var input = element[0].value;\n          if (newValue !== oldValue && input) {\n            ctrl.tableState().search = {};\n            tableCtrl.search(input, newValue);\n          }\n        });\n\n        //table state -> view\n        scope.$watch(function () {\n          return ctrl.tableState().search;\n        }, function (newValue, oldValue) {\n          var predicateExpression = attr.stSearch || '$';\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\n          }\n        }, true);\n\n        // view -> table state\n        element.bind(event, function (evt) {\n          evt = evt.originalEvent || evt;\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n\n          promise = $timeout(function () {\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\n            promise = null;\n          }, throttle);\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSelectRow', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      scope: {\n        row: '=stSelectRow'\n      },\n      link: function (scope, element, attr, ctrl) {\n        var mode = attr.stSelectMode || stConfig.select.mode;\n        element.bind('click', function () {\n          scope.$apply(function () {\n            ctrl.select(scope.row, mode);\n          });\n        });\n\n        scope.$watch('row.isSelected', function (newValue) {\n          if (newValue === true) {\n            element.addClass(stConfig.select.selectedClass);\n          } else {\n            element.removeClass(stConfig.select.selectedClass);\n          }\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n\n        var predicate = attr.stSort;\n        var getter = $parse(predicate);\n        var index = 0;\n        var classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\n        var classDescent = attr.stClassDescent || stConfig.sort.descentClass;\n        var stateClasses = [classAscent, classDescent];\n        var sortDefault;\n        var skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\n        var descendingFirst = attr.stDescendingFirst !== undefined ? attr.stDescendingFirst : stConfig.sort.descendingFirst;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.sort.delay;\n\n        if (attr.stSortDefault) {\n          sortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\n        }\n\n        //view --> table state\n        function sort () {\n          if (descendingFirst) {\n            index = index === 0 ? 2 : index - 1;\n          } else {\n            index++;\n          }\n\n          var func;\n          predicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\n          if (index % 3 === 0 && !!skipNatural !== true) {\n            //manual reset\n            index = 0;\n            ctrl.tableState().sort = {};\n            ctrl.tableState().pagination.start = 0;\n            func = ctrl.pipe.bind(ctrl);\n          } else {\n            func = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0);\n          }\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n          if (throttle < 0) {\n            func();\n          } else {\n            promise = $timeout(func, throttle);\n          }\n        }\n\n        element.bind('click', function sortClick () {\n          if (predicate) {\n            scope.$apply(sort);\n          }\n        });\n\n        if (sortDefault) {\n          index = sortDefault === 'reverse' ? 1 : 0;\n          sort();\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().sort;\n        }, function (newValue) {\n          if (newValue.predicate !== predicate) {\n            index = 0;\n            element\n              .removeClass(classAscent)\n              .removeClass(classDescent);\n          } else {\n            index = newValue.reverse === true ? 2 : 1;\n            element\n              .removeClass(stateClasses[index % 2])\n              .addClass(stateClasses[index - 1]);\n          }\n        }, true);\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPagination', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'EA',\n      require: '^stTable',\n      scope: {\n        stItemsByPage: '=?',\n        stDisplayedPages: '=?',\n        stPageChange: '&'\n      },\n      templateUrl: function (element, attrs) {\n        if (attrs.stTemplate) {\n          return attrs.stTemplate;\n        }\n        return stConfig.pagination.template;\n      },\n      link: function (scope, element, attrs, ctrl) {\n\n        scope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\n        scope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\n\n        scope.currentPage = 1;\n        scope.pages = [];\n\n        function redraw () {\n          var paginationState = ctrl.tableState().pagination;\n          var start = 1;\n          var end;\n          var i;\n          var prevPage = scope.currentPage;\n          scope.totalItemCount = paginationState.totalItemCount;\n          scope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\n\n          start = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\n          end = start + scope.stDisplayedPages;\n\n          if (end > paginationState.numberOfPages) {\n            end = paginationState.numberOfPages + 1;\n            start = Math.max(1, end - scope.stDisplayedPages);\n          }\n\n          scope.pages = [];\n          scope.numPages = paginationState.numberOfPages;\n\n          for (i = start; i < end; i++) {\n            scope.pages.push(i);\n          }\n\n          if (prevPage !== scope.currentPage) {\n            scope.stPageChange({newPage: scope.currentPage});\n          }\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().pagination;\n        }, redraw, true);\n\n        //scope --> table state  (--> view)\n        scope.$watch('stItemsByPage', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            scope.selectPage(1);\n          }\n        });\n\n        scope.$watch('stDisplayedPages', redraw);\n\n        //view -> table state\n        scope.selectPage = function (page) {\n          if (page > 0 && page <= scope.numPages) {\n            ctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\n          }\n        };\n\n        if (!ctrl.tableState().pagination.number) {\n          ctrl.slice(0, scope.stItemsByPage);\n        }\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\n    return {\n      require: 'stTable',\n      scope: {\n        stPipe: '='\n      },\n      link: {\n\n        pre: function (scope, element, attrs, ctrl) {\n\n          var pipePromise = null;\n\n          if (ng.isFunction(scope.stPipe)) {\n            ctrl.preventPipeOnWatch();\n            ctrl.pipe = function () {\n\n              if (pipePromise !== null) {\n                $timeout.cancel(pipePromise)\n              }\n\n              pipePromise = $timeout(function () {\n                scope.stPipe(ctrl.tableState(), ctrl);\n              }, config.pipe.delay);\n\n              return pipePromise;\n            }\n          }\n        },\n\n        post: function (scope, element, attrs, ctrl) {\n          ctrl.pipe();\n        }\n      }\n    };\n  }]);\n\n})(angular);"],"sourceRoot":"/source/"}