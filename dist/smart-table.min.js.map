{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","filtered","lastSelected","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","isFunction","functionName","name","input","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","pressed","all","rows","index","lastSelectedIndex","forEach","r","isShifted","isSelected","shift","min","max","i","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","$document","ctrlKey","shiftKey","stSelectMode","$apply","addClass","removeClass","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","paginationState","prevPage","currentPage","floor","abs","pages","numPages","push","newPage","selectPage","page","config","stPipe","pre","pipePromise","post","angular"],"mappings":"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","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\n    'use strict';\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\n    $templateCache.put('template/smart-table/pagination.html',\n        '<nav ng-if=\"numPages && pages.length >= 2\"><ul class=\"pagination\">' +\n        '<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\"><a ng-click=\"selectPage(page)\">{{page}}</a></li>' +\n        '</ul></nav>');\n}]);\n\n\nng.module('smart-table')\n  .constant('stConfig', {\n    pagination: {\n      template: 'template/smart-table/pagination.html',\n      itemsByPage: 10,\n      displayedPages: 5\n    },\n    search: {\n      delay: 400, // ms\n      inputEvent: 'input'\n    },\n    select: {\n      mode: 'single',\n      selectedClass: 'st-selected'\n    },\n    sort: {\n      ascentClass: 'st-sort-ascent',\n      descentClass: 'st-sort-descent',\n      skipNatural: false,\n      delay:300\n    },\n    pipe: {\n      delay: 100 //ms\n    }\n  });\nng.module('smart-table')\n  .controller('stTableController', ['$scope', '$parse', '$filter', '$attrs', function StTableController ($scope, $parse, $filter, $attrs) {\n    var propertyName = $attrs.stTable;\n    var displayGetter = $parse(propertyName);\n    var displaySetter = displayGetter.assign;\n    var safeGetter;\n    var orderBy = $filter('orderBy');\n    var filter = $filter('filter');\n    var safeCopy = copyRefs(displayGetter($scope));\n    var tableState = {\n      sort: {},\n      search: {},\n      pagination: {\n        start: 0,\n        totalItemCount: 0\n      }\n    };\n    var filtered;\n    var pipeAfterSafeCopy = true;\n    var ctrl = this;\n    var lastSelected;\n\n    function copyRefs (src) {\n      return src ? [].concat(src) : [];\n    }\n\n    function updateSafeCopy () {\n      safeCopy = copyRefs(safeGetter($scope));\n      if (pipeAfterSafeCopy === true) {\n        ctrl.pipe();\n      }\n    }\n\n    function deepDelete (object, path) {\n      if (path.indexOf('.') != -1) {\n        var partials = path.split('.');\n        var key = partials.pop();\n        var parentPath = partials.join('.');\n        var parentObject = $parse(parentPath)(object)\n        delete parentObject[key];\n        if (Object.keys(parentObject).length == 0) {\n          deepDelete(object, parentPath);\n        }\n      } else {\n        delete object[path];\n      }\n    }\n\n    if ($attrs.stSafeSrc) {\n      safeGetter = $parse($attrs.stSafeSrc);\n      $scope.$watch(function () {\n        var safeSrc = safeGetter($scope);\n        return safeSrc ? safeSrc.length : 0;\n\n      }, function (newValue, oldValue) {\n        if (newValue !== safeCopy.length) {\n          updateSafeCopy();\n        }\n      });\n      $scope.$watch(function () {\n        return safeGetter($scope);\n      }, function (newValue, oldValue) {\n        if (newValue !== oldValue) {\n          tableState.pagination.start = 0;\n          updateSafeCopy();\n        }\n      });\n    }\n\n    /**\n     * sort the rows\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\n     * @param [reverse] - if you want to reverse the order\n     */\n    this.sortBy = function sortBy (predicate, reverse) {\n      tableState.sort.predicate = predicate;\n      tableState.sort.reverse = reverse === true;\n\n      if (ng.isFunction(predicate)) {\n        tableState.sort.functionName = predicate.name;\n      } else {\n        delete tableState.sort.functionName;\n      }\n\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * search matching rows\n     * @param {String} input - the input string\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\n     */\n    this.search = function search (input, predicate) {\n      var predicateObject = tableState.search.predicateObject || {};\n      var prop = predicate ? predicate : '$';\n\n      input = ng.isString(input) ? input.trim() : input;\n      $parse(prop).assign(predicateObject, input);\n      // to avoid to filter out null value\n      if (!input) {\n        deepDelete(predicateObject, prop);\n      }\n      tableState.search.predicateObject = predicateObject;\n      tableState.pagination.start = 0;\n      return this.pipe();\n    };\n\n    /**\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\n     */\n    this.pipe = function pipe () {\n      var pagination = tableState.pagination;\n      var output;\n      filtered = tableState.search.predicateObject ? filter(safeCopy, tableState.search.predicateObject) : safeCopy;\n      if (tableState.sort.predicate) {\n        filtered = orderBy(filtered, tableState.sort.predicate, tableState.sort.reverse);\n      }\n      pagination.totalItemCount = filtered.length;\n      if (pagination.number !== undefined) {\n        pagination.numberOfPages = filtered.length > 0 ? Math.ceil(filtered.length / pagination.number) : 1;\n        pagination.start = pagination.start >= filtered.length ? (pagination.numberOfPages - 1) * pagination.number : pagination.start;\n        output = filtered.slice(pagination.start, pagination.start + parseInt(pagination.number));\n      }\n      displaySetter($scope, output || filtered);\n    };\n\n    /**\n     * select a dataRow (it will add the attribute isSelected to the row object)\n     * @param {Object} row - the row to select\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\n     */\n    this.select = function select (row, mode, pressed) {\n      if (pressed.all()) return;\n\n      var rows = copyRefs(displayGetter($scope));\n      var index = rows.indexOf(row);\n      var lastSelectedIndex = rows.indexOf(lastSelected);\n\n      if (index !== -1) {\n        if (pressed.ctrl) {\n          rows.forEach(function (r) {\n            r.isShifted = false;\n          });\n\n          row.isSelected = !row.isSelected;\n        } else if (pressed.shift) {\n          var min = Math.min(index, lastSelectedIndex);\n          var max = Math.max(index, lastSelectedIndex);\n\n          rows.forEach(function (r) {\n            r.isSelected = !r.isShifted && r.isSelected;\n            r.isShifted = false;\n           });\n\n          for (var i = min; i <= max; i++) {\n            rows[i].isSelected = true;\n            rows[i].isShifted = true;\n          };\n          return;\n        } else {\n          rows.forEach(function (r) {\n            r.isSelected = false;\n            r.isShifted = false;\n          });\n          row.isSelected = true;\n        }\n        lastSelected = row;\n      } else {\n        rows.forEach(function (r) { r.isSelected = false });\n        lastSelected = undefined;\n      }\n    };\n\n    /**\n     * take a slice of the current sorted/filtered collection (pagination)\n     *\n     * @param {Number} start - start index of the slice\n     * @param {Number} number - the number of item in the slice\n     */\n    this.slice = function splice (start, number) {\n      tableState.pagination.start = start;\n      tableState.pagination.number = number;\n      return this.pipe();\n    };\n\n    /**\n     * return the current state of the table\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\n     */\n    this.tableState = function getTableState () {\n      return tableState;\n    };\n\n    this.getFilteredCollection = function getFilteredCollection () {\n      return filtered || safeCopy;\n    };\n\n    /**\n     * Use a different filter function than the angular FilterFilter\n     * @param filterName the name under which the custom filter is registered\n     */\n    this.setFilterFunction = function setFilterFunction (filterName) {\n      filter = $filter(filterName);\n    };\n\n    /**\n     * Use a different function than the angular orderBy\n     * @param sortFunctionName the name under which the custom order function is registered\n     */\n    this.setSortFunction = function setSortFunction (sortFunctionName) {\n      orderBy = $filter(sortFunctionName);\n    };\n\n    /**\n     * Usually when the safe copy is updated the pipe function is called.\n     * Calling this method will prevent it, which is something required when using a custom pipe function\n     */\n    this.preventPipeOnWatch = function preventPipe () {\n      pipeAfterSafeCopy = false;\n    };\n  }])\n  .directive('stTable', function () {\n    return {\n      restrict: 'A',\n      controller: 'stTableController',\n      link: function (scope, element, attr, ctrl) {\n\n        if (attr.stSetFilter) {\n          ctrl.setFilterFunction(attr.stSetFilter);\n        }\n\n        if (attr.stSetSort) {\n          ctrl.setSortFunction(attr.stSetSort);\n        }\n      }\n    };\n  });\n\nng.module('smart-table')\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\n    return {\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n        var tableCtrl = ctrl;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.search.delay;\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\n\n        attr.$observe('stSearch', function (newValue, oldValue) {\n          var input = element[0].value;\n          if (newValue !== oldValue && input) {\n            ctrl.tableState().search = {};\n            tableCtrl.search(input, newValue);\n          }\n        });\n\n        //table state -> view\n        scope.$watch(function () {\n          return ctrl.tableState().search;\n        }, function (newValue, oldValue) {\n          var predicateExpression = attr.stSearch || '$';\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\n          }\n        }, true);\n\n        // view -> table state\n        element.bind(event, function (evt) {\n          evt = evt.originalEvent || evt;\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n\n          promise = $timeout(function () {\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\n            promise = null;\n          }, throttle);\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSelectRow', ['stConfig', '$document', function (stConfig, $document) {\n\n    var pressed = {\n      ctrl: false,\n      shift: false,\n      all: function () {\n        return this.ctrl && this.shift;\n      }\n    };\n\n    $document.bind(\"keydown keyup\", function (event) {\n      pressed.ctrl = event.ctrlKey;\n      pressed.shift = event.shiftKey;\n    });\n\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      scope: {\n        row: '=stSelectRow'\n      },\n      link: function (scope, element, attr, ctrl) {\n        var mode = attr.stSelectMode || stConfig.select.mode;\n        element.bind('click contextmenu', function () {\n          scope.$apply(function () {\n            ctrl.select(scope.row, mode, pressed);\n          });\n        });\n\n        scope.$watch('row.isSelected', function (newValue) {\n          if (newValue === true) {\n            element.addClass(stConfig.select.selectedClass);\n          } else {\n            element.removeClass(stConfig.select.selectedClass);\n          }\n        });\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\n    return {\n      restrict: 'A',\n      require: '^stTable',\n      link: function (scope, element, attr, ctrl) {\n\n        var predicate = attr.stSort;\n        var getter = $parse(predicate);\n        var index = 0;\n        var classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\n        var classDescent = attr.stClassDescent || stConfig.sort.descentClass;\n        var stateClasses = [classAscent, classDescent];\n        var sortDefault;\n        var skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\n        var promise = null;\n        var throttle = attr.stDelay || stConfig.sort.delay;\n\n        if (attr.stSortDefault) {\n          sortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\n        }\n\n        //view --> table state\n        function sort () {\n          index++;\n          var func;\n          predicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\n          if (index % 3 === 0 && !!skipNatural !== true) {\n            //manual reset\n            index = 0;\n            ctrl.tableState().sort = {};\n            ctrl.tableState().pagination.start = 0;\n            func = ctrl.pipe.bind(ctrl);\n          } else {\n            func = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0);\n          }\n          if (promise !== null) {\n            $timeout.cancel(promise);\n          }\n          if (throttle < 0) {\n            func();\n          } else {\n            promise = $timeout(func, throttle);\n          }\n        }\n\n        element.bind('click', function sortClick () {\n          if (predicate) {\n            sort();\n          }\n        });\n\n        if (sortDefault) {\n          index = sortDefault === 'reverse' ? 1 : 0;\n          sort();\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().sort;\n        }, function (newValue) {\n          if (newValue.predicate !== predicate) {\n            index = 0;\n            element\n              .removeClass(classAscent)\n              .removeClass(classDescent);\n          } else {\n            index = newValue.reverse === true ? 2 : 1;\n            element\n              .removeClass(stateClasses[index % 2])\n              .addClass(stateClasses[index - 1]);\n          }\n        }, true);\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPagination', ['stConfig', function (stConfig) {\n    return {\n      restrict: 'EA',\n      require: '^stTable',\n      scope: {\n        stItemsByPage: '=?',\n        stDisplayedPages: '=?',\n        stPageChange: '&'\n      },\n      templateUrl: function (element, attrs) {\n        if (attrs.stTemplate) {\n          return attrs.stTemplate;\n        }\n        return stConfig.pagination.template;\n      },\n      link: function (scope, element, attrs, ctrl) {\n\n        scope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\n        scope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\n\n        scope.currentPage = 1;\n        scope.pages = [];\n\n        function redraw () {\n          var paginationState = ctrl.tableState().pagination;\n          var start = 1;\n          var end;\n          var i;\n          var prevPage = scope.currentPage;\n          scope.totalItemCount = paginationState.totalItemCount;\n          scope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\n\n          start = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\n          end = start + scope.stDisplayedPages;\n\n          if (end > paginationState.numberOfPages) {\n            end = paginationState.numberOfPages + 1;\n            start = Math.max(1, end - scope.stDisplayedPages);\n          }\n\n          scope.pages = [];\n          scope.numPages = paginationState.numberOfPages;\n\n          for (i = start; i < end; i++) {\n            scope.pages.push(i);\n          }\n\n          if (prevPage !== scope.currentPage) {\n            scope.stPageChange({newPage: scope.currentPage});\n          }\n        }\n\n        //table state --> view\n        scope.$watch(function () {\n          return ctrl.tableState().pagination;\n        }, redraw, true);\n\n        //scope --> table state  (--> view)\n        scope.$watch('stItemsByPage', function (newValue, oldValue) {\n          if (newValue !== oldValue) {\n            scope.selectPage(1);\n          }\n        });\n\n        scope.$watch('stDisplayedPages', redraw);\n\n        //view -> table state\n        scope.selectPage = function (page) {\n          if (page > 0 && page <= scope.numPages) {\n            ctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\n          }\n        };\n\n        if (!ctrl.tableState().pagination.number) {\n          ctrl.slice(0, scope.stItemsByPage);\n        }\n      }\n    };\n  }]);\n\nng.module('smart-table')\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\n    return {\n      require: 'stTable',\n      scope: {\n        stPipe: '='\n      },\n      link: {\n\n        pre: function (scope, element, attrs, ctrl) {\n\n          var pipePromise = null;\n\n          if (ng.isFunction(scope.stPipe)) {\n            ctrl.preventPipeOnWatch();\n            ctrl.pipe = function () {\n\n              if (pipePromise !== null) {\n                $timeout.cancel(pipePromise)\n              }\n\n              pipePromise = $timeout(function () {\n                scope.stPipe(ctrl.tableState(), ctrl);\n              }, config.pipe.delay);\n\n              return pipePromise;\n            }\n          }\n        },\n\n        post: function (scope, element, attrs, ctrl) {\n          ctrl.pipe();\n        }\n      }\n    };\n  }]);\n\n})(angular);"],"sourceRoot":"/source/"}