{"version":3,"sources":["smart-table.min.js"],"names":["ng","undefined","module","run","$templateCache","put","constant","pagination","template","itemsByPage","displayedPages","search","delay","inputEvent","select","mode","selectedClass","sort","ascentClass","descentClass","descendingFirst","skipNatural","pipe","controller","$scope","$parse","$filter","$attrs","copyRefs","src","concat","updateSafeCopy","safeCopy","safeGetter","pipeAfterSafeCopy","ctrl","deepDelete","object","path","indexOf","partials","split","key","pop","parentPath","join","parentObject","Object","keys","length","filtered","propertyName","stTable","displayGetter","displaySetter","assign","orderBy","filter","tableState","start","totalItemCount","this","stSafeSrc","$watch","safeSrc","newValue","oldValue","sortBy","predicate","reverse","isFunction","functionName","name","input","predicateObject","prop","isString","trim","output","number","numberOfPages","Math","ceil","slice","parseInt","row","rows","isDefined","index","isSelected","map","r","getFilteredCollection","setFilterFunction","filterName","setSortFunction","sortFunctionName","preventPipeOnWatch","directive","restrict","link","scope","element","attr","stSetFilter","stSetSort","stConfig","$timeout","require","tableCtrl","promise","throttle","stDelay","event","stInputEvent","$observe","value","predicateExpression","stSearch","bind","evt","originalEvent","cancel","target","stSelectMode","$apply","addClass","removeClass","func","getter","isArray","stSort","sortDefault","classAscent","stClassAscent","classDescent","stClassDescent","stateClasses","stSkipNatural","stDescendingFirst","stSortDefault","$eval","stItemsByPage","stDisplayedPages","stPageChange","templateUrl","attrs","stTemplate","redraw","end","i","paginationState","prevPage","currentPage","floor","max","abs","pages","numPages","push","newPage","selectPage","page","config","stPipe","pre","pipePromise","post","angular"],"mappings":"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","file":"smart-table.min.js","sourcesContent":["(function (ng, undefined){\r\n    'use strict';\r\n\nng.module('smart-table', []).run(['$templateCache', function ($templateCache) {\r\n    $templateCache.put('template/smart-table/pagination.html',\r\n        '<nav ng-if=\"numPages && pages.length >= 2\"><ul class=\"pagination\">' +\r\n        '<li ng-repeat=\"page in pages\" ng-class=\"{active: page==currentPage}\"><a ng-click=\"selectPage(page)\">{{page}}</a></li>' +\r\n        '</ul></nav>');\r\n}]);\r\n\r\n\nng.module('smart-table')\r\n  .constant('stConfig', {\r\n    pagination: {\r\n      template: 'template/smart-table/pagination.html',\r\n      itemsByPage: 10,\r\n      displayedPages: 5\r\n    },\r\n    search: {\r\n      delay: 400, // ms\r\n      inputEvent: 'input'\r\n    },\r\n    select: {\r\n      mode: 'single',\r\n      selectedClass: 'st-selected'\r\n    },\r\n    sort: {\r\n      ascentClass: 'st-sort-ascent',\r\n      descentClass: 'st-sort-descent',\r\n      descendingFirst: false,\r\n      skipNatural: false,\r\n      delay:300\r\n    },\r\n    pipe: {\r\n      delay: 100 //ms\r\n    }\r\n  });\nng.module('smart-table')\r\n  .controller('stTableController', ['$scope', '$parse', '$filter', '$attrs', function StTableController ($scope, $parse, $filter, $attrs) {\r\n    var propertyName = $attrs.stTable;\r\n    var displayGetter = $parse(propertyName);\r\n    var displaySetter = displayGetter.assign;\r\n    var safeGetter;\r\n    var orderBy = $filter('orderBy');\r\n    var filter = $filter('filter');\r\n    var safeCopy = copyRefs(displayGetter($scope));\r\n    var tableState = {\r\n      sort: {},\r\n      search: {},\r\n      pagination: {\r\n        start: 0,\r\n        totalItemCount: 0\r\n      }\r\n    };\r\n    var filtered;\r\n    var pipeAfterSafeCopy = true;\r\n    var ctrl = this;\r\n    var lastSelected;\r\n\r\n    function copyRefs (src) {\r\n      return src ? [].concat(src) : [];\r\n    }\r\n\r\n    function updateSafeCopy () {\r\n      safeCopy = copyRefs(safeGetter($scope));\r\n      if (pipeAfterSafeCopy === true) {\r\n        ctrl.pipe();\r\n      }\r\n    }\r\n\r\n    function deepDelete (object, path) {\r\n      if (path.indexOf('.') != -1) {\r\n        var partials = path.split('.');\r\n        var key = partials.pop();\r\n        var parentPath = partials.join('.');\r\n        var parentObject = $parse(parentPath)(object)\r\n        delete parentObject[key];\r\n        if (Object.keys(parentObject).length == 0) {\r\n          deepDelete(object, parentPath);\r\n        }\r\n      } else {\r\n        delete object[path];\r\n      }\r\n    }\r\n\r\n    if ($attrs.stSafeSrc) {\r\n      safeGetter = $parse($attrs.stSafeSrc);\r\n      $scope.$watch(function () {\r\n        var safeSrc = safeGetter($scope);\r\n        return safeSrc && safeSrc.length ? safeSrc[0] : undefined;\r\n      }, function (newValue, oldValue) {\r\n        if (newValue !== oldValue) {\r\n          updateSafeCopy();\r\n        }\r\n      });\r\n      $scope.$watch(function () {\r\n        var safeSrc = safeGetter($scope);\r\n        return safeSrc ? safeSrc.length : 0;\r\n      }, function (newValue, oldValue) {\r\n        if (newValue !== safeCopy.length) {\r\n          updateSafeCopy();\r\n        }\r\n      });\r\n      $scope.$watch(function () {\r\n        return safeGetter($scope);\r\n      }, function (newValue, oldValue) {\r\n        if (newValue !== oldValue) {\r\n          tableState.pagination.start = 0;\r\n          updateSafeCopy();\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * sort the rows\r\n     * @param {Function | String} predicate - function or string which will be used as predicate for the sorting\r\n     * @param [reverse] - if you want to reverse the order\r\n     */\r\n    this.sortBy = function sortBy (predicate, reverse) {\r\n      tableState.sort.predicate = predicate;\r\n      tableState.sort.reverse = reverse === true;\r\n\r\n      if (ng.isFunction(predicate)) {\r\n        tableState.sort.functionName = predicate.name;\r\n      } else {\r\n        delete tableState.sort.functionName;\r\n      }\r\n\r\n      tableState.pagination.start = 0;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * search matching rows\r\n     * @param {String} input - the input string\r\n     * @param {String} [predicate] - the property name against you want to check the match, otherwise it will search on all properties\r\n     */\r\n    this.search = function search (input, predicate) {\r\n      var predicateObject = tableState.search.predicateObject || {};\r\n      var prop = predicate ? predicate : '$';\r\n\r\n      input = ng.isString(input) ? input.trim() : input;\r\n      $parse(prop).assign(predicateObject, input);\r\n      // to avoid to filter out null value\r\n      if (!input) {\r\n        deepDelete(predicateObject, prop);\r\n      }\r\n      tableState.search.predicateObject = predicateObject;\r\n      tableState.pagination.start = 0;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * this will chain the operations of sorting and filtering based on the current table state (sort options, filtering, ect)\r\n     */\r\n    this.pipe = function pipe () {\r\n      var pagination = tableState.pagination;\r\n      var output;\r\n      filtered = tableState.search.predicateObject ? filter(safeCopy, tableState.search.predicateObject) : safeCopy;\r\n      if (tableState.sort.predicate) {\r\n        filtered = orderBy(filtered, tableState.sort.predicate, tableState.sort.reverse);\r\n      }\r\n      pagination.totalItemCount = filtered.length;\r\n      if (pagination.number !== undefined) {\r\n        pagination.numberOfPages = filtered.length > 0 ? Math.ceil(filtered.length / pagination.number) : 1;\r\n        pagination.start = pagination.start >= filtered.length ? (pagination.numberOfPages - 1) * pagination.number : pagination.start;\r\n        output = filtered.slice(pagination.start, pagination.start + parseInt(pagination.number));\r\n      }\r\n      displaySetter($scope, output || filtered);\r\n    };\r\n\r\n    /**\r\n     * select a dataRow (it will add the attribute isSelected to the row object)\r\n     * @param {Object} row - the row to select\r\n     * @param {String} [mode] - \"single\" or \"multiple\" (multiple by default)\r\n     */\r\n    this.select = function select (row, mode) {\r\n     var rows = ng.isDefined(safeGetter) ? copyRefs(safeGetter($scope)) : copyRefs(displayGetter($scope));\r\n      var index = rows.indexOf(row);\r\n      if (index !== -1) {\r\n        if (mode === 'single') {\r\n          var isSelected = rows[index].isSelected;\r\n          rows = rows.map(function (r) { delete r.isSelected; return r; });\r\n          if (!isSelected) {\r\n            rows[index].isSelected = true;\r\n          }\r\n        } else {\r\n          rows[index].isSelected = !rows[index].isSelected;\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n     * take a slice of the current sorted/filtered collection (pagination)\r\n     *\r\n     * @param {Number} start - start index of the slice\r\n     * @param {Number} number - the number of item in the slice\r\n     */\r\n    this.slice = function splice (start, number) {\r\n      tableState.pagination.start = start;\r\n      tableState.pagination.number = number;\r\n      return this.pipe();\r\n    };\r\n\r\n    /**\r\n     * return the current state of the table\r\n     * @returns {{sort: {}, search: {}, pagination: {start: number}}}\r\n     */\r\n    this.tableState = function getTableState () {\r\n      return tableState;\r\n    };\r\n\r\n    this.getFilteredCollection = function getFilteredCollection () {\r\n      return filtered || safeCopy;\r\n    };\r\n\r\n    /**\r\n     * Use a different filter function than the angular FilterFilter\r\n     * @param filterName the name under which the custom filter is registered\r\n     */\r\n    this.setFilterFunction = function setFilterFunction (filterName) {\r\n      filter = $filter(filterName);\r\n    };\r\n\r\n    /**\r\n     * Use a different function than the angular orderBy\r\n     * @param sortFunctionName the name under which the custom order function is registered\r\n     */\r\n    this.setSortFunction = function setSortFunction (sortFunctionName) {\r\n      orderBy = $filter(sortFunctionName);\r\n    };\r\n\r\n    /**\r\n     * Usually when the safe copy is updated the pipe function is called.\r\n     * Calling this method will prevent it, which is something required when using a custom pipe function\r\n     */\r\n    this.preventPipeOnWatch = function preventPipe () {\r\n      pipeAfterSafeCopy = false;\r\n    };\r\n  }])\r\n  .directive('stTable', function () {\r\n    return {\r\n      restrict: 'A',\r\n      controller: 'stTableController',\r\n      link: function (scope, element, attr, ctrl) {\r\n\r\n        if (attr.stSetFilter) {\r\n          ctrl.setFilterFunction(attr.stSetFilter);\r\n        }\r\n\r\n        if (attr.stSetSort) {\r\n          ctrl.setSortFunction(attr.stSetSort);\r\n        }\r\n      }\r\n    };\r\n  });\r\n\nng.module('smart-table')\r\n  .directive('stSearch', ['stConfig', '$timeout','$parse', function (stConfig, $timeout, $parse) {\r\n    return {\r\n      require: '^stTable',\r\n      link: function (scope, element, attr, ctrl) {\r\n        var tableCtrl = ctrl;\r\n        var promise = null;\r\n        var throttle = attr.stDelay || stConfig.search.delay;\r\n        var event = attr.stInputEvent || stConfig.search.inputEvent;\r\n\r\n        attr.$observe('stSearch', function (newValue, oldValue) {\r\n          var input = element[0].value;\r\n          if (newValue !== oldValue && input) {\r\n            ctrl.tableState().search = {};\r\n            tableCtrl.search(input, newValue);\r\n          }\r\n        });\r\n\r\n        //table state -> view\r\n        scope.$watch(function () {\r\n          return ctrl.tableState().search;\r\n        }, function (newValue, oldValue) {\r\n          var predicateExpression = attr.stSearch || '$';\r\n          if (newValue.predicateObject && $parse(predicateExpression)(newValue.predicateObject) !== element[0].value) {\r\n            element[0].value = $parse(predicateExpression)(newValue.predicateObject) || '';\r\n          }\r\n        }, true);\r\n\r\n        // view -> table state\r\n        element.bind(event, function (evt) {\r\n          evt = evt.originalEvent || evt;\r\n          if (promise !== null) {\r\n            $timeout.cancel(promise);\r\n          }\r\n\r\n          promise = $timeout(function () {\r\n            tableCtrl.search(evt.target.value, attr.stSearch || '');\r\n            promise = null;\r\n          }, throttle);\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stSelectRow', ['stConfig', function (stConfig) {\r\n    return {\r\n      restrict: 'A',\r\n      require: '^stTable',\r\n      scope: {\r\n        row: '=stSelectRow'\r\n      },\r\n      link: function (scope, element, attr, ctrl) {\r\n        var mode = attr.stSelectMode || stConfig.select.mode;\r\n        element.bind('click', function () {\r\n          scope.$apply(function () {\r\n            ctrl.select(scope.row, mode);\r\n          });\r\n        });\r\n\r\n        scope.$watch('row.isSelected', function (newValue) {\r\n          if (newValue === true) {\r\n            element.addClass(stConfig.select.selectedClass);\r\n          } else {\r\n            element.removeClass(stConfig.select.selectedClass);\r\n          }\r\n        });\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stSort', ['stConfig', '$parse', '$timeout', function (stConfig, $parse, $timeout) {\r\n    return {\r\n      restrict: 'A',\r\n      require: '^stTable',\r\n      link: function (scope, element, attr, ctrl) {\r\n\r\n        var predicate = attr.stSort;\r\n        var getter = $parse(predicate);\r\n        var index = 0;\r\n        var classAscent = attr.stClassAscent || stConfig.sort.ascentClass;\r\n        var classDescent = attr.stClassDescent || stConfig.sort.descentClass;\r\n        var stateClasses = [classAscent, classDescent];\r\n        var sortDefault;\r\n        var skipNatural = attr.stSkipNatural !== undefined ? attr.stSkipNatural : stConfig.sort.skipNatural;\r\n        var descendingFirst = attr.stDescendingFirst !== undefined ? attr.stDescendingFirst : stConfig.sort.descendingFirst;\r\n        var promise = null;\r\n        var throttle = attr.stDelay || stConfig.sort.delay;\r\n\r\n        if (attr.stSortDefault) {\r\n          sortDefault = scope.$eval(attr.stSortDefault) !== undefined ? scope.$eval(attr.stSortDefault) : attr.stSortDefault;\r\n        }\r\n\r\n        //view --> table state\r\n        function sort () {\r\n          if (descendingFirst) {\r\n            index = index === 0 ? 2 : index - 1;\r\n          } else {\r\n            index++;\r\n          }\r\n\r\n          var func;\r\n          predicate = ng.isFunction(getter(scope)) || ng.isArray(getter(scope)) ? getter(scope) : attr.stSort;\r\n          if (index % 3 === 0 && !!skipNatural !== true) {\r\n            //manual reset\r\n            index = 0;\r\n            ctrl.tableState().sort = {};\r\n            ctrl.tableState().pagination.start = 0;\r\n            func = ctrl.pipe.bind(ctrl);\r\n          } else {\r\n            func = ctrl.sortBy.bind(ctrl, predicate, index % 2 === 0);\r\n          }\r\n          if (promise !== null) {\r\n            $timeout.cancel(promise);\r\n          }\r\n          if (throttle < 0) {\r\n            func();\r\n          } else {\r\n            promise = $timeout(func, throttle);\r\n          }\r\n        }\r\n\r\n        element.bind('click', function sortClick () {\r\n          if (predicate) {\r\n            scope.$apply(sort);\r\n          }\r\n        });\r\n\r\n        if (sortDefault) {\r\n          index = sortDefault === 'reverse' ? 1 : 0;\r\n          sort();\r\n        }\r\n\r\n        //table state --> view\r\n        scope.$watch(function () {\r\n          return ctrl.tableState().sort;\r\n        }, function (newValue) {\r\n          if (newValue.predicate !== predicate) {\r\n            index = 0;\r\n            element\r\n              .removeClass(classAscent)\r\n              .removeClass(classDescent);\r\n          } else {\r\n            index = newValue.reverse === true ? 2 : 1;\r\n            element\r\n              .removeClass(stateClasses[index % 2])\r\n              .addClass(stateClasses[index - 1]);\r\n          }\r\n        }, true);\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stPagination', ['stConfig', function (stConfig) {\r\n    return {\r\n      restrict: 'EA',\r\n      require: '^stTable',\r\n      scope: {\r\n        stItemsByPage: '=?',\r\n        stDisplayedPages: '=?',\r\n        stPageChange: '&'\r\n      },\r\n      templateUrl: function (element, attrs) {\r\n        if (attrs.stTemplate) {\r\n          return attrs.stTemplate;\r\n        }\r\n        return stConfig.pagination.template;\r\n      },\r\n      link: function (scope, element, attrs, ctrl) {\r\n\r\n        scope.stItemsByPage = scope.stItemsByPage ? +(scope.stItemsByPage) : stConfig.pagination.itemsByPage;\r\n        scope.stDisplayedPages = scope.stDisplayedPages ? +(scope.stDisplayedPages) : stConfig.pagination.displayedPages;\r\n\r\n        scope.currentPage = 1;\r\n        scope.pages = [];\r\n\r\n        function redraw () {\r\n          var paginationState = ctrl.tableState().pagination;\r\n          var start = 1;\r\n          var end;\r\n          var i;\r\n          var prevPage = scope.currentPage;\r\n          scope.totalItemCount = paginationState.totalItemCount;\r\n          scope.currentPage = Math.floor(paginationState.start / paginationState.number) + 1;\r\n\r\n          start = Math.max(start, scope.currentPage - Math.abs(Math.floor(scope.stDisplayedPages / 2)));\r\n          end = start + scope.stDisplayedPages;\r\n\r\n          if (end > paginationState.numberOfPages) {\r\n            end = paginationState.numberOfPages + 1;\r\n            start = Math.max(1, end - scope.stDisplayedPages);\r\n          }\r\n\r\n          scope.pages = [];\r\n          scope.numPages = paginationState.numberOfPages;\r\n\r\n          for (i = start; i < end; i++) {\r\n            scope.pages.push(i);\r\n          }\r\n\r\n          if (prevPage !== scope.currentPage) {\r\n            scope.stPageChange({newPage: scope.currentPage});\r\n          }\r\n        }\r\n\r\n        //table state --> view\r\n        scope.$watch(function () {\r\n          return ctrl.tableState().pagination;\r\n        }, redraw, true);\r\n\r\n        //scope --> table state  (--> view)\r\n        scope.$watch('stItemsByPage', function (newValue, oldValue) {\r\n          if (newValue !== oldValue) {\r\n            scope.selectPage(1);\r\n          }\r\n        });\r\n\r\n        scope.$watch('stDisplayedPages', redraw);\r\n\r\n        //view -> table state\r\n        scope.selectPage = function (page) {\r\n          if (page > 0 && page <= scope.numPages) {\r\n            ctrl.slice((page - 1) * scope.stItemsByPage, scope.stItemsByPage);\r\n          }\r\n        };\r\n\r\n        if (!ctrl.tableState().pagination.number) {\r\n          ctrl.slice(0, scope.stItemsByPage);\r\n        }\r\n      }\r\n    };\r\n  }]);\r\n\nng.module('smart-table')\r\n  .directive('stPipe', ['stConfig', '$timeout', function (config, $timeout) {\r\n    return {\r\n      require: 'stTable',\r\n      scope: {\r\n        stPipe: '='\r\n      },\r\n      link: {\r\n\r\n        pre: function (scope, element, attrs, ctrl) {\r\n\r\n          var pipePromise = null;\r\n\r\n          if (ng.isFunction(scope.stPipe)) {\r\n            ctrl.preventPipeOnWatch();\r\n            ctrl.pipe = function () {\r\n\r\n              if (pipePromise !== null) {\r\n                $timeout.cancel(pipePromise)\r\n              }\r\n\r\n              pipePromise = $timeout(function () {\r\n                scope.stPipe(ctrl.tableState(), ctrl);\r\n              }, config.pipe.delay);\r\n\r\n              return pipePromise;\r\n            }\r\n          }\r\n        },\r\n\r\n        post: function (scope, element, attrs, ctrl) {\r\n          ctrl.pipe();\r\n        }\r\n      }\r\n    };\r\n  }]);\r\n\n})(angular);"],"sourceRoot":"/source/"}